apiVersion: apps/v1
kind: Deployment
metadata:
  name: product-deployment
  labels:
    app: product-service
    profile: dev
spec:
  # Deployment Spec
  selector:
    # Match mapping pod's label
    matchLabels:
      app: product-service
      profile: dev
  minReadySeconds: 10
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  replicas: 1
  # Pod Spec
  template:
    metadata:
      name: product-pod
      # Set pod's label
      labels:
        app: product-service
        profile: dev
    spec:
      containers:
        - name: product-service
          image: akak640/dailyon-product-service
          resources:
            requests:
              memory: "256Mi"
              cpu: "500m"
            limits:
              memory: "512Mi"
              cpu: "1000m"
          ports:
            - containerPort: 8087
          imagePullPolicy: Always
        - name: mysql
          image: mysql:8.0.34
          resources:
            requests:
              memory: "256Mi"
              cpu: "500m"
            limits:
              memory: "512Mi"
              cpu: "1000m"
          ports:
            - containerPort: 3306
          env:
            - name: MYSQL_ROOT_PASSWORD
              value: "11111111"
            - name: MYSQL_DATABASE
              value: product-service
          volumeMounts:
            - name: product-initdb
              mountPath: /docker-entrypoint-initdb.d
            - name: mysql-config
              mountPath: /etc/mysql/conf.d
        - name: redis
          resources:
            requests:
              memory: "128Mi"
              cpu: "250m"
            limits:
              memory: "256Mi"
              cpu: "500m"
          image: redis:latest
          ports:
            - containerPort: 6379
      volumes:
        - name: product-initdb
          configMap:
            name: product-initdb-config
        - name: mysql-config
          configMap:
            name: mysql-config