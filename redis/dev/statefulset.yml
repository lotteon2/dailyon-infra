apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: redis-cluster
  namespace: dev
  labels:
    app: redis-cluster
spec:
  serviceName: redis-cluster
  # Deployment Spec
  selector:
    # Match mapping pod's label
    matchLabels:
      app: redis-cluster
  replicas: 4
  # Pod Spec
  template:
    metadata:
      name: redis-pod
      # Set pod's label
      labels:
        app: redis-cluster
    spec:
      containers:
        - name: redis
          image: redis:7.2-alpine
          resources:
            requests:
              memory: "128Mi"
              cpu: "250m"
            limits:
              memory: "256Mi"
              cpu: "500m"
          ports:
            - containerPort: 6379
              name: client
            - containerPort: 16379
              name: gossip
          command: ["/conf/update-node.sh", "redis-server", "/conf/redis.conf"]
          env:
            # 현재 pod의 ip를 env에 세팅
            - name: POD_IP
              valueFrom:
                fieldRef:
                  fieldPath: status.podIP
            - name: REDIS_PASSWORD
              value: "11111111"
          volumeMounts:
            - name: conf
              mountPath: /conf
              readOnly: false
          # 애플리케이션이 시작된 뒤 초기화 작업이 마무리되어 준비되었는지 검사
          readinessProbe:
            tcpSocket:
              port: 6379
            initialDelaySeconds: 20
            periodSeconds: 20
          # 애플리케이션이 정상 상태를 유지하고 있는지 지속해서 검사
          livenessProbe:
            tcpSocket:
              port: 6379
            initialDelaySeconds: 20
            periodSeconds: 20
      volumes:
        - name: conf
          configMap:
            name: redis-cluster
            defaultMode: 0755
      affinity:
        nodeAffinity:
          # Pod이 존재하지 않다가 처음으로 만들어지는 상태, 이미 실행중인데 nodeSelector가 node에서 제거된다면 계속 실행
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
              - matchExpressions:
                  - key: type
                    operator: In
                    values:
                      - Redis
